{"ast":null,"code":"import _classCallCheck from \"/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/src/container/GameBoard.js\";\nimport React from 'react';\nimport CardCollection from \"./CardCollection\";\n\nvar GameBoard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GameBoard, _React$Component);\n\n  function GameBoard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GameBoard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GameBoard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      words: [],\n      loading: true\n    };\n\n    _this.displayWords = function () {\n      _this.state.words.forEach(function (word) {\n        console.log(word);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(GameBoard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:3000/cards/index\").then(function (response) {\n        return response.json();\n      }).then(function (words) {\n        return _this2.setState({\n          words: words,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      displayWords;\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"OIJ\");\n    }\n  }]);\n\n  return GameBoard;\n}(React.Component);\n\nexport default GameBoard;","map":{"version":3,"sources":["/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/src/container/GameBoard.js"],"names":["React","CardCollection","GameBoard","state","words","loading","displayWords","forEach","word","console","log","fetch","then","response","json","setState","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;IAEMC,S;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,OAAO,EAAE;AAFL,K;;UAWTC,Y,GAAe,YAAM;AAChB,YAAKH,KAAL,CAAWC,KAAX,CAAiBG,OAAjB,CAAyB,UAASC,IAAT,EAAc;AACnCC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,OAFD;AAGH,K;;;;;;;wCATmB;AAAA;;AACpBG,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAR,KAAK;AAAA,eAAI,MAAI,CAACW,QAAL,CAAc;AAACX,UAAAA,KAAK,EAALA,KAAD;AAAOC,UAAAA,OAAO,EAAC;AAAf,SAAd,CAAJ;AAAA,OAFb;AAGD;;;6BAMO;AACJC,MAAAA,YAAY;AACb,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADH;AAGF;;;;EAvBqBN,KAAK,CAACgB,S;;AAyB9B,eAAed,SAAf","sourcesContent":["import React from 'react'\nimport CardCollection from \"./CardCollection\"\n\nclass GameBoard extends React.Component{\n\n    state = {\n        words: [],\n        loading: true\n    }\n\n\n    componentDidMount() {\n    fetch(\"http://localhost:3000/cards/index\")\n      .then(response => response.json())\n      .then(words => this.setState({words,loading:false}))\n  }\n   displayWords = () => {\n        this.state.words.forEach(function(word){\n            console.log(word)\n        })\n    }\n  render(){\n      displayWords\n     return (\n        <h1>OIJ</h1>\n     )\n  }\n}\nexport default GameBoard;\n"]},"metadata":{},"sourceType":"module"}
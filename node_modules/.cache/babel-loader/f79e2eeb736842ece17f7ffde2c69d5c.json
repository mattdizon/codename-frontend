{"ast":null,"code":"import _classCallCheck from \"/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from 'react';\nimport CardCollection from \"./CardCollection\";\n\nvar GameBoard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GameBoard, _React$Component);\n\n  function GameBoard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GameBoard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GameBoard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(GameBoard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch(\"http://localhost:3000/cards/index\").then(function (response) {\n        return response.json();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return componentDidMount().then(words, function () {\n        return console.log(words);\n      });\n    }\n  }]);\n\n  return GameBoard;\n}(React.Component);\n\nexport default GameBoard;","map":{"version":3,"sources":["/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/src/container/GameBoard.js"],"names":["React","CardCollection","GameBoard","state","loading","fetch","then","response","json","componentDidMount","words","console","log","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;IAEMC,S;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE;AADL,K;;;;;;wCAKY;AACpBC,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB;AAED;;;6BAEO;AACL,aAAOC,iBAAiB,GAAGH,IAApB,CAAyBI,KAAzB,EAA+B;AAAA,eAAMC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAN;AAAA,OAA/B,CAAP;AACF;;;;EAdqBV,KAAK,CAACa,S;;AAgB9B,eAAeX,SAAf","sourcesContent":["import React from 'react'\nimport CardCollection from \"./CardCollection\"\n\nclass GameBoard extends React.Component{\n\n    state = {\n        loading: true\n    }\n\n\n    componentDidMount() {\n    fetch(\"http://localhost:3000/cards/index\")\n      .then(response => response.json())\n  }\n\n  render(){\n     return componentDidMount().then(words,() => console.log(words))\n  }\n}\nexport default GameBoard;\n"]},"metadata":{},"sourceType":"module"}
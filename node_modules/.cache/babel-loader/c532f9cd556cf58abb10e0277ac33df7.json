{"ast":null,"code":"import _classCallCheck from \"/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/src/container/GameBoard.js\";\nimport React from 'react';\nimport Card from '../component/Card';\nimport Map from '../component/GameMap';\n\nvar GameBoard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GameBoard, _React$Component);\n\n  function GameBoard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GameBoard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GameBoard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      words: [],\n      loading: true,\n      bgColor: ['red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'green', 'green', 'green', 'green', 'green', 'green', 'green', 'green', 'black']\n    };\n\n    _this.generateCards = function () {\n      var i = 0;\n      var wordArr = [];\n\n      _this.state.words.sort(function () {\n        return 0.5 - Math.random();\n      }).map(function (word) {\n        while (i < 25) {\n          i++;\n          return wordArr.push(word);\n        }\n      }); //array of cards\n      //need to associate card with color\n\n\n      return wordArr.map(function (word) {\n        return React.createElement(Card, {\n          word: word,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(GameBoard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://codename-backend.herokuapp.com/cards/index\").then(function (response) {\n        return response.json();\n      }).then(function (words) {\n        return _this2.setState({\n          words: words,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"generateMap\",\n    value: function generateMap() {\n      var arr = [];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.generateMap();\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.generateCards());\n    }\n  }]);\n\n  return GameBoard;\n}(React.Component);\n\nexport default GameBoard;","map":{"version":3,"sources":["/Users/matthewdizon/Desktop/Code/WebDev/Codename/codename_frontend/src/container/GameBoard.js"],"names":["React","Card","Map","GameBoard","state","words","loading","bgColor","generateCards","i","wordArr","sort","Math","random","map","word","push","fetch","then","response","json","setState","arr","generateMap","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;;IAEMC,S;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,OAAO,EAAE,IAFL;AAGJC,MAAAA,OAAO,EAAE,CACL,KADK,EAEL,KAFK,EAGL,KAHK,EAIL,KAJK,EAKL,KALK,EAML,KANK,EAOL,KAPK,EAQL,KARK,EASL,KATK,EAUL,MAVK,EAWL,MAXK,EAYL,MAZK,EAaL,MAbK,EAcL,MAdK,EAeL,MAfK,EAgBL,MAhBK,EAiBL,MAjBK,EAkBL,OAlBK,EAmBL,OAnBK,EAoBL,OApBK,EAqBL,OArBK,EAsBL,OAtBK,EAuBL,OAvBK,EAwBL,OAxBK,EAyBL,OAzBK,EA0BL,OA1BK;AAHL,K;;UAuCRC,a,GAAe,YAAK;AAChB,UAAIC,CAAC,GAAG,CAAR;AACA,UAAIC,OAAO,GAAG,EAAd;;AACA,YAAKN,KAAL,CAAWC,KAAX,CAAiBM,IAAjB,CAAsB;AAAA,eAAM,MAAMC,IAAI,CAACC,MAAL,EAAZ;AAAA,OAAtB,EAAiDC,GAAjD,CAAqD,UAAAC,IAAI,EAAI;AACzD,eAAON,CAAC,GAAG,EAAX,EAAc;AACVA,UAAAA,CAAC;AACD,iBACIC,OAAO,CAACM,IAAR,CAAaD,IAAb,CADJ;AAGH;AAEJ,OARD,EAHgB,CAYhB;AACA;;;AACA,aAAOL,OAAO,CAACI,GAAR,CAAY,UAAAC,IAAI;AAAA,eAAI,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAIA,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAJ;AAAA,OAAhB,CAAP;AACH,K;;;;;;;wCArBmB;AAAA;;AACpBE,MAAAA,KAAK,CAAC,oDAAD,CAAL,CACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAb,KAAK;AAAA,eAAI,MAAI,CAACgB,QAAL,CAAc;AAAChB,UAAAA,KAAK,EAALA,KAAD;AAAOC,UAAAA,OAAO,EAAC;AAAf,SAAd,CAAJ;AAAA,OAFb;AAGC;;;kCAkBY;AACT,UAAIgB,GAAG,GAAG,EAAV;AACH;;;6BAIO;AACJ,WAAKC,WAAL;AACH,aACI;AAAK,QAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKf,aAAL,EADD,CADJ;AAQF;;;;EAzEqBR,KAAK,CAACwB,S;;AA2E9B,eAAerB,SAAf","sourcesContent":["import React from 'react'\nimport Card from '../component/Card'\nimport Map from '../component/GameMap'\n\nclass GameBoard extends React.Component{\n\n    state = {\n        words: [],\n        loading: true,\n        bgColor: [\n            'red',\n            'red',\n            'red',\n            'red',\n            'red',\n            'red',\n            'red',\n            'red',\n            'red',\n            'blue',\n            'blue',\n            'blue',\n            'blue',\n            'blue',\n            'blue',\n            'blue',\n            'blue',\n            'green',\n            'green',\n            'green',\n            'green',\n            'green',\n            'green',\n            'green',\n            'green',\n            'black'\n        ]\n    }\n\n    componentDidMount() {\n    fetch(\"https://codename-backend.herokuapp.com/cards/index\")\n      .then(response => response.json())\n      .then(words => this.setState({words,loading:false}))\n    }\n\n    generateCards =() =>{\n        let i = 0\n        let wordArr = []\n        this.state.words.sort(() => 0.5 - Math.random()).map(word => {\n            while (i < 25){\n                i++\n                return (\n                    wordArr.push(word)\n                )\n            }\n\n        })\n        //array of cards\n        //need to associate card with color\n        return wordArr.map(word => <Card word = {word}/>)\n    }\n    generateMap(){\n        let arr = []\n    }\n\n\n\n    render(){\n        this.generateMap()\n     return (\n         <div className = \"container\">\n         {this.generateCards()}\n         </div>\n     )\n\n\n\n  }\n}\nexport default GameBoard;\n"]},"metadata":{},"sourceType":"module"}